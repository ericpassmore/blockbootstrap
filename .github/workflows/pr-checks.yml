name: PR Checks

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  unit-test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:${{ secrets.DATABASE_PASSWORD || 'postgres' }}@localhost:5432/foo
      DB_SSL: false
      VITE_DATABASE_URL: postgresql://postgres:${{ secrets.DATABASE_PASSWORD || 'postgres' }}@localhost:5432/foo
      VITE_DB_SSL: false
      BREVO_API_KEY: foobar
      VITE_BREVO_API_KEY: foobar
      POLYGON_API_KEY: foobar
      OPENAI_API_KEY: foobar
      UPLOAD_SECRET: foobar
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - run: npm ci
      - run: npx cross-env ENVIRONMENT=TEST vitest run src/tests/unit

  integration-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: foo
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD || 'postgres' }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:${{ secrets.DATABASE_PASSWORD || 'postgres' }}@localhost:5432/foo
      DB_SSL: false
      VITE_DATABASE_URL: postgresql://postgres:${{ secrets.DATABASE_PASSWORD || 'postgres' }}@localhost:5432/foo
      VITE_DB_SSL: false
      BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
      VITE_BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
      POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      UPLOAD_SECRET: ${{ secrets.UPLOAD_SECRET }}
      POSTGRES_DB: foo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD || 'postgres' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - run: npm ci
      - name: Wait for PostgreSQL
        run: |
          timeout 60s bash -c 'until pg_isready -h localhost -U postgres; do sleep 2; done'
      - name: Initialize Database
        run: psql -h localhost -d foo -U postgres -f src/tests/db/setup.sql
        env:
          PGPASSWORD: ${{ secrets.DATABASE_PASSWORD || 'postgres' }}
      - run: npx cross-env ENVIRONMENT=TEST vitest run src/tests/{api,db}

  check-all:
    runs-on: ubuntu-latest
    needs: [lint, unit-test, integration-test]
    steps:
      - name: All checks passed
        run: echo "âœ… All checks passed!"
